name: Build and upload to PyPI

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
    tags:
      - "*"
  release:
    types:
      - published


concurrency:
  group: "${{ github.ref }}-${{ github.head_ref }}-${{ github.workflow }}"
  cancel-in-progress: true


defaults:
  run:
    shell: bash -l {0}


jobs:
  build_wheels:
    if: "github.repository == 'MDAnalysis/mdanalysis'"
    name: Build wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.6.0

      - name: upload artifacts
        if: |
          (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) ||
          (github.event_name == 'release' && github.event.action == 'published')
        uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    if: "github.repository == 'MDAnalysis/mdanalysis'"
    name: build source distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build sdist
        run: pipx run build --sdist

      - name: upload artifacts
        if: |
          (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) ||
          (github.event_name == 'release' && github.event.action == 'published')
        uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_testpypi:
    if: |
      github.repository == 'MDAnalysis/mdanalysis' &&
      github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'
    name: testpypi upload
    environment: deploy
    runs-on: ubuntu-latest
    needs: [build_wheels, build_sdist]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
 
  upload_pypi:
    if: |
      github.repository == 'MDAnalysis/mdanalysis' &&
      github.event_name == 'release' && github.event.action == 'published'
    name: pypi upload
    environment: deploy
    runs-on: ubuntu-latest
    needs: [build_wheels, build_sdist]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
