=====================
Installing MDAnalysis
=====================

Requirements
============

Currently MDAnalysis is only distributed in source form. In order to
build the library some C and C++ code needs to be compiled. Thus you will need

    * python (>=2.5)
    * a C and a C++ compiler (e.g. GNU gcc),
    * the python header files (typically in a package python-dev),
    * numpy and cython to compile the DCD reader and numerical extensions,

See *Additional non-standard packages* below for what else you need at
run time.

The source code can be obtained from the SVN repository. The primary
dependency is numpy, although pylab is a useful addition to plot
analyses generated with MDAnalysis. 


Getting the source 
==================

Download a tar ball from
http://code.google.com/p/mdanalysis/downloads/list ; these
instructions apply to versions 0.6.0-rc2 or higher.

Alternatively, check out the MDAnalysis directory from the SVN
repository at http://mdanalysis.googlecode.com. See the source
checkout instructions for details
(http://code.google.com/p/mdanalysis/source/checkout). In most cases
simply do ::

  svn checkout http://mdanalysis.googlecode.com/svn/trunk/ MDAnalysis
  cd MDAnalysis



Installation from source
========================

Currently MDAnalysis is only distributed in source form. You will need
a C compiler to compile the DCD and XTC reader and numerical extensions.

In principle, installation should be as simple as ::

   python setup.py build
   python setup.py install

This installs MDAnalysis in the system wide python directory; this may
require administrative privileges.

It is also possible to use --prefix, --home, or --user options for
setup.py to install in a different (probably your private) python
directory hierarchy. ``python setup.py install --help`` should show
you your options.

If you have problem at this stage then have a look at the operating
system specific notes at the end of this file or look in the issue
tracker --- maybe the problem is recognized and a work around can be
found in the comments



Selecting an installation directory
-----------------------------------

In order to install in a non-default directory one can use various
options to setup (see --help) such as ::

 python setup.py install --prefix LOCAL_DIRECTORY

or any of the other options of distutil's setup.py to install in
alternative directories, for instance

 python setup.py install --user



Easy Install
------------

We are also exploring the use of easy_install. This is experimental
but you might be able to do ::

  easy_install [options] ./mdanalysis
 
A developer installation (that immediately reflects changes to the
sources) with ::

  cd ./mdanalysis
  python setup develop [options]


If you want to use optional functionality (such as running some of the
analysis code in the MDAnalysis.analysis module or running the test
suite) then you can have easy_install fetch and install additionaly
required packages if you have not been able to install them through
your package manager (always preferred!). For instance,

  easy_install ./mdanalysis[analysis]

should also install packages required for analysis.



Additional non-standard python packages
=======================================

See the operating system specific notes above for hints how to get the
necessary packages through the native package management
system. Please add your own (eg for RPM based systems which the
developers are not using heavily).

python-dev includes Python.h, which is required for compiling. numpy
is used at the compilation stage to find maths libraries. scipy and
biopython are only needed when one wants to use all MDAnalysis
functions but are not required for compiling.

Required python packages
------------------------

In order to use the library in your own python code you will need at least

    * numpy of version 1.0.3 or greater (http://numpy.scipy.org/)
    * BioPython's Bio.PDB (http://biopython.org)

Optional python packages (used in MDAnalysis.analysis):

    * networkx (http://networkx.lanl.gov/) --- for analysis of lipid 
      leaflets via MDAnalysis.analysis.leaflet
    * nose (http://somethingaboutorange.com/mrl/projects/nose/) -- for testing
    * ScientificPython http://dirac.cnrs-orleans.fr/plone/software/scientificpython/
      Scientific.IO.FortranFormat (experimental LAMMPS parser)


OS specific notes
=================

Linux
-----

* The GNU gcc compiler is the default and should be used
  automatically; in particular you will not have to do anything with
  setup.cfg. This should work if you have no file named setup.cfg in
  your MDAnalysis directory. (If you want to use setup.cfg and use GNU
  gcc simply comment out the compiler=intel line in the template:

   # compiler=intel

  (However, compiling with Intel compilers has not been tested for a
  while. Send questions and feedback to the mailing list
  http://groups.google.com/group/mdnalysis-discussion )

* To compile with the Intel compilers, set in setup.cfg ::

    [build]
    compiler=intel

  (Although, in some instances the KDTree does not compile with
  Intel. In this case please file a bug and use gcc in the mean time.)


* Install prerequisite packages on Ubuntu or Debian with

    sudo aptitude install python-dev python-cython python-numpy g++

  Install packages needed for full functionality

    sudo aptitude install python-scipy python-matplotlib python-biopython




Mac OS X
--------
OS specific notes


* Tested with Mac OS X 10.4.11+fink and 10.6.2+MacPorts. 

* fink hints:
  Install prerequisite packages using fink::

     fink install cython-py25 scipy-core-py25 scipy-py25

  Install packages needed for full functionality::

     fink install  matplotlib-py25 biopython-py25

* MacPorts hints::

     port install  py26-numpy  py26-cython
     port install  py26-scipy  py26-matplotlib py26-biopython

* NOTE: Use the Apple-provided gcc, not the fink provided
  one. Apparently, only Apple's gcc has the -arch flag that appears to
  be required for python setup.py install. (Thanks to Justin Lemkul
  for pointing it out).
